
&НаСервере
Процедура ПИН_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("ПараметрыКорзины") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыКорзины = Параметры.ПараметрыКорзины;
	Если ПараметрыКорзины.Свойство("АдресКорзиныВХранилище") И ЗначениеЗаполнено(ПараметрыКорзины.АдресКорзиныВХранилище) Тогда
		ТаблицаДляЗагрузки = ПолучитьИзВременногоХранилища(ПараметрыКорзины.АдресКорзиныВХранилище);
		Объект.Товары.Загрузить(ТаблицаДляЗагрузки);
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Объект.Товары Цикл
		ПриИзмененииНоменклатурыТовары(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

#Область ИзменениеНоменклатуры

&НаСервере
Процедура ПриИзмененииНоменклатурыТовары(СтрокаТаблицы)
	
	// Подготовим данные для передачи на сервер
	Контекст = Новый Структура("Дата, Организация, СкладОтправитель, СкладПолучатель, 
		|ТипСкладаОтправитель, ТипСкладаПолучатель, РазделятьПоСтавкамНДС, СчетУчета");
	ЗаполнитьЗначенияСвойств(Контекст, ЭтаФорма);
	ЗаполнитьЗначенияСвойств(Контекст, Объект);

	КонтейнерСтрока = Новый Структура("Номенклатура, СчетУчета, НовыйСчетУчета, СпособУчетаНДС");
	ЗаполнитьЗначенияСвойств(КонтейнерСтрока, СтрокаТаблицы);
	
	ПараметрыЗаполненияСчетовУчета = НачатьЗаполнениеСчетовУчета(
		"Товары.Номенклатура",
		Объект,
		СтрокаТаблицы,
		Контекст,
		КонтейнерСтрока);
		
	// Получим данные с сервера
	Изменения = ПолучитьДанныеТоварыНоменклатураПриИзменении(Контекст, КонтейнерСтрока, ПараметрыЗаполненияСчетовУчета.КЗаполнению);
	
	// Обработаем данные с сервера
	ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Изменения);
	Если Изменения.Свойство("ЦенаВРознице") Тогда
		СтрокаТаблицы.СуммаВРознице = СтрокаТаблицы.ЦенаВРознице * СтрокаТаблицы.Количество;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти